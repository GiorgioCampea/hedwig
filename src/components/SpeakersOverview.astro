---
import { t } from "i18next";
import { getEvents } from "../data/agenda-data";
import AgendaOverview from "./AgendaOverview.astro";
import SpeakersDetail from "./SpeakersDetail.astro";

type Props = {
  speakerId: string;
};

const { speakerId } = Astro.props;

const firstDayEvents = await getEvents({
  filters: {
    speaker: speakerId,
    day: 1,
  },
});

const secondDayEvents = await getEvents({
  filters: {
    speaker: speakerId,
    day: 2,
  },
});
---

<SpeakersDetail speakerId={speakerId} additionalClass="dots" />
{
  firstDayEvents.length !== 0 && (
    <div class="relative max-w-screen-2xl m-auto md:p-2">
      <a href="/agenda">
        <h3 class="text-3xl text-center font-bold text-accent-content pt-8 md:pt-32 pb-4 md:pb-16">
          {t("agenda:event-date-1")}
        </h3>
      </a>
      <AgendaOverview isSpeakerPage events={firstDayEvents} />
    </div>
  )
}
{
  firstDayEvents.length !== 0 && secondDayEvents.length !== 0 && (
    <div class="px-9">
      <hr class="h-px my-8 border-dashed" />
    </div>
  )
}
{
  secondDayEvents.length !== 0 && (
    <div class="max-w-screen-2xl m-auto relative md:p-2">
      <a href="/agenda/2">
        <h3 class="text-3xl text-center font-bold text-accent-content pt-8 md:pt-32 pb-4 md:pb-16">
          {t("agenda:event-date-2")}
        </h3>
      </a>
      <AgendaOverview isSpeakerPage events={secondDayEvents} />
    </div>
  )
}
