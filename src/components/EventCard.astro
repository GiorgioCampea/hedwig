---
import clsx from "clsx";
import AgendaSpeaker from "./AgendaSpeaker.astro";

type Speaker = {
  name: string;
  url: string;
  description: string;
  imageUrl: string;
};

type Props = {
  name: string;
  language: string;
  length: string;
  room: string;
  multiple: boolean;
  speaker: Speaker | Speaker[];
  abstract?: string;
};

const { name, language, speaker, length, multiple, room, abstract } = Astro.props;
---

<li
  class={clsx("flex flex-col md:flex-row gap-6 overflow-hidden w-full", {
    "splide__slide md:m-6 mx-2 md:max-w-[90%] relative": multiple,
    "px-2 md:px-0": !multiple,
  })}
>
  <div
    class={clsx("rounded-3xl flex flex-col w-full bg-[#232323]", {
      "md:bg-[#2E2E2E]": multiple,
    })}
  >
    <div class="p-6 h-full">
      <div class="flex justify-start pb-6">
        

        <span
          class="block bg-slate-300 text-black px-3 py-2 rounded-3xl text-sm"
        >
          {length}
        </span>

        <span
          class="block bg-slate-300 text-black px-3 py-2 mx-2 rounded-3xl text-sm"
        >
          {language}
        </span>
        <span
          class="block border-slate-300 border text-white px-3 py-2 mx-2 rounded-3xl text-sm ml-auto"
        >
          {room}
        </span>
      </div>
      <h2 class="text-2xl md:text-4xl font-black">{name}</h2>
      <!--If abstract -->
      {
        abstract && (
          <p class="text-left mt-4">{abstract}</p>
        )
      }
      <!-- If !speaker -->
      {!speaker && <hr class="h-px my-8 border-dashed" />}
    </div>
    <!--If speaker -->
    {
      speaker && (
        <div class="w-full bg-[#323232] rounded-b-3xl p-6 justify-self-end">
          {Array.isArray(speaker) ? (
            <div class="flex flex-col gap-3">
              {speaker.map((_speaker) => (
                <AgendaSpeaker {..._speaker} />
              ))}
            </div>
          ) : (
            <AgendaSpeaker {...speaker} />
          )}
        </div>
      )
    }
  </div>
</li>
